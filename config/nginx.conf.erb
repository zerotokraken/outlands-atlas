daemon off;
# Heroku dynos have at least 4 cores
worker_processes <%= ENV['NGINX_WORKERS'] || 4 %>;

events {
  use epoll;
  accept_mutex on;
  worker_connections <%= ENV['NGINX_WORKER_CONNECTIONS'] || 1024 %>;
}

http {
  gzip on;
  gzip_comp_level 2;
  gzip_min_length 512;
  gzip_proxied any;
  gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;
  gzip_vary on;

  server_tokens off;

  log_format l2met 'measure#nginx.service=$request_time request_id=$http_x_request_id';
  access_log <%= ENV['NGINX_ACCESS_LOG_PATH'] || 'logs/nginx/access.log' %> l2met;
  error_log <%= ENV['NGINX_ERROR_LOG_PATH'] || 'logs/nginx/error.log' %>;

  include mime.types;
  default_type application/octet-stream;
  sendfile on;

  # Must read the body in 5 seconds.
  client_body_timeout 5;

  server {
    listen <%= ENV["PORT"] %>;
    server_name _;
    keepalive_timeout 5;
    client_max_body_size <%= ENV['NGINX_CLIENT_MAX_BODY_SIZE'] || 1 %>M;
    root /app/dist;

    # Handle JSON files directly
    location ~ \.json$ {
      try_files $uri =404;
      expires -1;
      add_header Cache-Control no-store;
      add_header Content-Type application/json;
    }

    # Handle static assets with caching
    location ~ \.(png|jpg|jpeg|gif|ico|css|js)$ {
      try_files $uri =404;
      expires max;
      add_header Cache-Control public;
    }

    # Default location block
    location / {
      try_files $uri $uri/ /index.html;
      expires -1;
      add_header Cache-Control no-store;
    }

    location = /index.html {
      expires -1;
      add_header Cache-Control no-store;
    }
  }
}
